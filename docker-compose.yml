services:
  # APPLICATIONS

  orders-api:
    image: ms-orders-api
    container_name: ms-orders-api
    build:
      context: src/Orders.Api
    ports:
      - 5000:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices

  orders-consumer:
    image: ms-orders-consumer
    container_name: ms-orders-consumer
    build:
      context: src/Orders.Consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices

  # INFRASTRUCTURE

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ms-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 10s
      retries: 10
    networks:
      - microservices

  # OBSERVABILITY

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: ms-otel-collector
    volumes:
      - ./config/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
    networks:
      - microservices

networks:
  microservices:
    driver: bridge
